# в рамках fastapi собирается Docker-файл из корневой папки всего приложения.
# Ему назначается имя fastapi-image, которое далее используется при создании
# контейнера tests — в нём запускаются функциональные тесты.

services:
  test-fastapi:
    build:
      context: ../../../.
      dockerfile: Dockerfile
    image: fastapi-image
    restart: always
    container_name: test-fastapi
    env_file:
      - ./.env
    expose:
      - "8080"
    networks:
      test-middle-practicum:
        ipv4_address: 172.19.0.2

  tests:
    image: fastapi-image
    container_name: tests
    networks:
      test-middle-practicum:
        ipv4_address: 172.19.0.3

  test-elasticsearch:
    image: elasticsearch:8.6.2
    restart: always
    container_name: test-elasticsearch
    env_file:
      - ./.env
    environment:
      - ES_JAVA_OPTS=-Xms200m -Xmx500m
      - discovery.type=single-node
      - xpack.security.enabled=false
    expose:
      - "9200"
    networks:
      test-middle-practicum:
        ipv4_address: 172.19.0.4

  test-redis:
    image: redis:7.4.0-alpine
    container_name: test-redis
    restart: always
    expose:
      - "6379"
    networks:
      test-middle-practicum:
        ipv4_address: 172.19.0.5

# subnet /27 - на 32 контейнера
networks:
  test-middle-practicum:
    driver: bridge
    ipam:
      # driver: default
      config:
        - subnet: 172.19.0.0/27
          gateway: 172.19.0.1
# uvicorn или gunicorn для запуска приложения.
# При запуске приложения нужно выбрать способ запуска. Для FastAPI-приложений есть два способа:

# 1. Через uvicorn — такой способ рекомендуется для нужд дебага приложения:
#    uvicorn src.main:app --host 0.0.0.0 --port 8000

# 2. Через gunicorn — этот способ считается предпочтительным для запуска в боевой среде:
#    gunicorn src.main:app --bind 0.0.0.0:8000 -k uvicorn.workers.UvicornWorker
